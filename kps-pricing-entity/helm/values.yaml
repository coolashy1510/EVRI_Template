kps-chart:
  nameOverride: ${APP_NAME}
  app:
    name: ${APP_NAME}
    version: ${APP_VERSION}
  pod:
    annotations:
      traffic.sidecar.istio.io/excludeOutboundPorts: "5432,9092"
      instrumentation.opentelemetry.io/inject-sdk: "monitoring/ksp-instrumentation"
      instrumentation.opentelemetry.io/container-names: ${APP_NAME}
    initContainer:
      enabled: true
      spec:
        name: ${APP_NAME}-liquibase
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: server, k8s, liquibase
        envFrom:
          - configMapRef:
              name: ${APP_NAME}-env-configmap
          - secretRef:
              name: ${APP_NAME}-secret
          - secretRef:
              name: ${APP_NAME}-external-secrets
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 1000m
        securityContext:
          privileged: false
          runAsNonRoot: true
          allowPrivilegeEscalation: false
    url: ${APP_IMAGE_URL}
    repository: ${APP_IMAGE_PATH}
    appContainer:
      imageName: ${APP_NAME}:${APP_VERSION}
      resources:
        requests:
          memory: 512Mi
          cpu: 100m
        limits:
          memory: 1024Mi
          cpu: 1000m
      securityContext:
        runAsNonRoot: true
      startupProbe:
        httpGet:
          path: "/health/readiness"
          port: http-metrics
        failureThreshold: 12
        periodSeconds: 5
        timeoutSeconds: 1
      readinessProbe:
        httpGet:
          path: "/health/readiness"
          port: http-metrics
        periodSeconds: 5
        timeoutSeconds: 1
      livenessProbe:
        httpGet:
          path: "/health/liveness"
          port: http-metrics
        initialDelaySeconds: 20
        periodSeconds: 5
        timeoutSeconds: 1
  configmap:
    env:
      SPRING_PROFILES_ACTIVE: server, k8s
      ENTITY_MANAGER_API_URL: http://feed-entity-manager:8000/
      ARCHIVE_BULK_LIMIT: "30"
      DELETE_ARCHIVE_BULK_LIMIT: "100"
      ARCHIVE_PERIOD_MINUTES: "5"
      ARCHIVE_LOCK_MAX_DURATION: "5m"
      DELETE_ARCHIVE_PERIOD_MINUTES: "30"
      ARCHIVE_CORRUPTED_DATA: "24"
      SAVE_PCC_LOCK_MAX_DURATION: "1m"
  kps:
    config:
      kafka:
        topicEnvPrefix: dev #  set value dev|int|pvt|prd
        confluent: # properties specific for Confluent consumer; we use them in the code manually constructing the consumer
          consumer.concurrency: 100
          message.buffer.size: 3200
        properties: # properties specific for Kafka which picks them up automatically
          max.poll.records: 100
          fetch.min.bytes: 262144
          max.partition.fetch.bytes: 3072000
          max.poll.interval.ms: 600000
          fetch.max.wait.ms: 5000
      messageRouting:
        Contest:
          majorVersion: 1
          outputTopic: pricing.pricing_domain
        Proposition:
          majorVersion: 1
          outputTopic: pricing.pricing_domain
        OptionChanged:
          majorVersion: 1
        VariantChanged:
          majorVersion: 1
        OutcomeResult:
          majorVersion: 1
        PriceChangedCollection:
          majorVersion: 1
  deployment:
    replicaCount: 1
    labels:
      elastic_destination_index: "pricing"
  hpa:
    maxReplicaCount: 1
  metrics:
    enabled: true
  istio:
    enabled: true
    gateway:
      enabled: true
    virtualservices:
      enabled: true
      contextRootRoutingEnabled: true
    authorization:
      enabled: true
      when:
        - key: source.namespace
          values: [ "istio-system", "pricing" ]
